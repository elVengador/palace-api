(()=>{var e,t,r,n={18967:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=18967,e.exports=t},20579:(e,t,r)=>{"use strict";var n=r(40096);r(59738).config();const a=process.env.DB_MONGODB_HOST||"127.0.0.1",s=(process.env.DB_MONGODB_PORT,process.env.DB_MONGODB_USER||"dev"),o=process.env.DB_MONGODB_PASS||"123123123",i=process.env.DB_MONGODB_NAME||"dev-database",u=process.env.DB_REDIS_HOST||"127.0.0.1",c=process.env.DB_REDIS_PORT||"5063",d=process.env.DB_REDIS_PASSWORD||"pass132124325ed",p=process.env.ACCESS_TOKEN_SECRET||"shhhh-access-12312",g=process.env.REFRESH_TOKEN_SECRET||"shhhh-refresh-14552";let l=null;const I=e=>l.db(i).collection(e);(async()=>{try{const e=`mongodb+srv://${s}:${o}@${a}/?retryWrites=true&w=majority`;console.log("> > connect to URI:",{env:"production",selectedUri:e},e),l=new n.MongoClient(e),await l.connect(),console.log("[💽 MongoDB]: connected successfull")}catch(e){console.error("> >",e)}})();var w=r(25693);const y=`redis://:${d}@${u}:${c}`;console.log({url:y});const f=(0,w.createClient)({url:y}),h=f;(async()=>{await f.connect(),console.log("[💽 Redis]: connected successfull")})();var v=r(89135),S=r(38137),O=r(13685),T=r.n(O),D=r(99268),m=r(17846),E=r.n(m),N=r(10046),_=r.n(N);const x=D();x.use(_().urlencoded({extended:!1})),x.use(_().json()),x.use(E()()),x.get("/",((e,t)=>t.send("🚀")));const q=e=>new Error(e),k=e=>new Error("Field invalid"),U=()=>new Error("Unauthorized"),b=()=>new Error("Server Error"),B=e=>((e=>{console.log(`[🔥 Error]: ${e.message}`)})(e),e.message.startsWith("Database Error: ")?new Error("Internal server error"):{message:e.message});var R=r(10858),P=r(49704),M=r.n(P);const A=({userId:e,rol:t,aud:r="app"})=>new Promise(((n,a)=>{const s={rol:t,aud:r,sub:e},o=p;M().sign(s,o,{expiresIn:"15m",issuer:"vauth"},((e,t)=>e?a(new Error(e)):t?void n(t):a(new Error("Server error at"))))})),$=({userId:e,aud:t="app"})=>new Promise(((r,n)=>{const a={aud:t,sub:e},s=g;M().sign(a,s,{expiresIn:"30 days",issuer:"vauth"},((e,t)=>{if(e||!t)return n(new Error("Invalid"));r(t)}))})),j=({refreshToken:e})=>new Promise(((t,r)=>{try{M().verify(e,g,((e,r)=>{if(e)throw new Error;return t(r.sub)}))}catch(e){return r(new Error("Not authorization"))}}));console.log("=== === =>>");const C=async({userId:e,token:t,expiration:r})=>await h.set(e,t,"EX",r),H=async({userId:e})=>await h.get(e),G=31536e3,L={...{signUp:async(e,{signUpInput:t})=>{try{const{nick:e,email:r,password:n}=t,a=await(async({email:e})=>await I("users").findOne({email:e}))({email:r});if(a)return q("Email ya esta en uso");let s={nick:"",phone:"",email:"",password:"",name:"",paternalLastName:"",maternalLastName:"",dni:"",birthday:"",photo:null,state:""};return s.nick=e,s.email=r,s.password=await(async({password:e})=>{const t=await R.genSalt(11);return await R.hash(e,t)})({password:n}),await(async e=>(await I("users").insertOne(e)).insertedId)(s)}catch(e){return console.log(e),b()}},signIn:async(e,{signInInput:t})=>{try{await((e=1e3)=>new Promise(((t,r)=>{setTimeout((()=>{t(!0)}),e)})))(1e3);const{email:e,password:r}=t,n=await(async({email:e})=>await I("users").findOne({email:e}))({email:e});if(!n)return k();const a=await(async({password:e,user:t})=>await R.compare(e,t.password))({password:r,user:n});if(!a)return k();const s=await A({userId:n._id,rol:n.rol||"dev"}),o=await $({userId:n._id});return await C({userId:n._id.toString(),token:o,expiration:G}),{accessToken:s,refreshToken:o}}catch(e){return b()}},signOff:async({signOffInput:e})=>{try{const{currentRefreshToken:t}=e;if(!t)return U();const r=await j({refreshToken:t});return t!==await H({userId:r})?U():(await(async({userId:e})=>await h.del(e))({userId:r}),!0)}catch(e){return b()}},refreshToken:async(e,{refreshTokenInput:t})=>{try{const{currentRefreshToken:e,retryNumber:r}=t;if(r>1)return q("MANY_TRYS");if(!e)return new Error("Bad Request");console.log(" REFRESH_TOKEN:",e);const n=await j({refreshToken:e});if(e!==await H({userId:n}))return new Error("Session Expired");const a=await A({userId:n,rol:"dev"}),s=await $({userId:n});return await C({userId:n,token:s,expiration:G}),{accessToken:a,refreshToken:s}}catch(e){return b()}},privateContent:async()=>{try{return"Hi man you got access to private content"}catch(e){return b()}}}},z="notes",F=async({tagId:e})=>{const t=I(z).find({tagId:e});return await t.toArray()},K="tags",W=async({tagId:e})=>await I(K).findOne({_id:e}),Y=async({userId:e})=>{const t=I(K).find({userId:e});return await t.toArray()},Q=async e=>{const t=await W({tagId:new n.ObjectId(e.tagId)});return{...e,tags:[t]}},J={addNote:async(e,{addNoteInput:t},r)=>{try{const e=r.userId;if(!e)return U();const n={tagId:null,value:"",state:"ENABLE",updateDate:(new Date).toISOString(),creationDate:(new Date).toISOString(),creationUser:null};n.tagId=t.tagId,n.value=t.value,n.creationUser=e;const a=await(async e=>(await I(z).insertOne(e)).insertedId)(n),s=await(async({noteId:e})=>await I(z).findOne({_id:e}))({noteId:a});return await Q(s)}catch(e){return b()}},updateNote:async(e,{noteId:t,updateNoteInput:r},a)=>{try{if(!a.userId)return U();const e={...r};e.updateDate=(new Date).toISOString();const s=await(async({noteId:e,newNote:t})=>(await I(z).findOneAndUpdate({_id:new n.ObjectId(e)},{$set:t},{returnDocument:"after"})).value)({noteId:t,newNote:e});return await Q(s)}catch(e){return b()}}},X={getNotesByUser:async(e,{},t)=>{try{const e=t.userId;if(!e)return U();const r=await Y({userId:e});return(await Promise.all(r.map((async e=>{const t=e._id.toHexString();return(await F({tagId:t})).map((t=>(async(e,t)=>({...e,tags:[...t]}))(t,[e])))})))).flat()}catch(e){return console.log(e),b()}},getNotesByTag:async(e,{tagId:t},r)=>{try{if(!r.userId)return U();const e=await F({tagId:t});return await Promise.all(e.map((async e=>await Q(e))))}catch(e){return b()}}},V={addTag:async(e,{addTagInput:t},r)=>{try{const e=r.userId;if(!e)return U();const n={userId:null,value:"",state:"ENABLE",updateDate:(new Date).toISOString(),creationDate:(new Date).toISOString()};n.userId=e,n.value=t.value;const a=await(async e=>(await I(K).insertOne(e)).insertedId)(n);return await W({tagId:a})}catch(e){return b()}},updateTag:async(e,{tagId:t,updateTagInput:r},a)=>{try{if(!a.userId)return U();const e={...r};return e.updateDate=(new Date).toISOString(),await(async({tagId:e,newTag:t})=>(await I(K).findOneAndUpdate({_id:new n.ObjectId(e)},{$set:t},{returnDocument:"after"})).value)({tagId:t,newTag:e})}catch(e){return b()}}},Z={getTagsByUser:async(e,{getTagsByUser:t},r)=>{try{const e=r.userId;return e?await Y({userId:e}):U()}catch(e){return console.log(e),b()}}};(async(e,t,r)=>{const n=T().createServer(x),a=new S.fv({typeDefs:e,resolvers:t,introspection:!0,plugins:[(0,v.ApolloServerPluginDrainHttpServer)({httpServer:n}),{async requestDidStart(e){console.log("[📝 Log]:",e.request.operationName)}}],formatError:B,context:async({req:e})=>{try{console.log("[💾 Context]");const t=e.headers.authorization||"";if(!t)return{userId:null};const r=t.split(" ")[1],n=await(e=>new Promise(((t,r)=>{try{M().verify(e,p,((e,n)=>e&&"JsonWebTokenError"===e?.name||e&&"TokenExpiredError"===e?.name?t(null):e?r(b()):t(n.sub)))}catch(e){return console.log("ERR_GET_USER_BY_TOKEN:",e),r(b())}})))(r);return{userId:n}}catch(e){return{userId:null}}}});await a.start(),a.applyMiddleware({app:x,path:"/graphql"}),await new Promise((e=>n.listen({port:4100},e))),console.log(`[📡 Server]: ready at http://localhost:4100${a.graphqlPath}`)})(v.gql`
    ${"\n    #graphql\n    \n    input SignUpInput{\n        nick:String!,\n        email:String!,\n        password:String!\n    }\n\n    input SignInInput{\n        email:String!,\n        password:String!\n    }\n\n    input SignOffInput{\n        currentRefreshToken:String!\n    }\n\n    input RefreshTokenInput{\n        currentRefreshToken:String!,\n        retryNumber:Int!,\n    }\n\n    type TokensOutput{\n        accessToken:String,\n        refreshToken:String\n    }\n\n"}
    ${"#graphql\n    type Tag {\n        _id: ID!\n        userId: ID!\n        value: String!\n        state: String!\n        updateDate: String!\n        creationDate: String!\n    }\n\n    input AddTagInput{\n        value: String!\n    }\n\n    input UpdateTagInput{\n        value: String!\n    }\n"}
    ${"#graphql\n    type Note {\n        _id: ID!\n        tagId: ID!\n        value: String!\n        state: String!\n        updateDate: String!\n        creationDate: String!\n        creationUser: ID!\n    }\n\n    type NoteOutput {\n        _id: ID!\n        tags:[Tag!]!\n        value: String!\n        state: String!\n        updateDate: String!\n        creationDate: String!\n        creationUser: ID!\n    }\n\n    input AddNoteInput{\n        tagId:ID!,\n        value:ID!\n    }\n    input UpdateNoteInput{\n        tagId:ID!,\n        value:ID!\n    }\n"}
    type Query {${"\n    \n    #graphql\n    # getMedia(id:ID!): Media\n    hola:String\n\n\n    #graphql\n    getTagsByUser: [Tag]\n\n    #graphql\n    getNotesByUser:[NoteOutput]\n    getNotesByTag(tagId:ID!):[NoteOutput]\n\n"}}
    type Mutation {${"\n    \n    #graphql\n    signUp(signUpInput:SignUpInput!):String\n    signIn(signInInput:SignInInput!):TokensOutput\n    signOff(signOffInput:SignOffInput!):Boolean\n    refreshToken(refreshTokenInput:RefreshTokenInput!):TokensOutput\n    privateContent:String\n\n\n    #graphql\n    addTag(addTagInput:AddTagInput):Tag\n    updateTag(tagId:ID!,updateTagInput:UpdateTagInput!):Tag\n    # removeTag(tagId:ID!):Int\n\n    #graphql\n    addNote(addNoteInput:AddNoteInput):NoteOutput\n    updateNote(noteId:ID!,updateNoteInput:UpdateNoteInput):NoteOutput\n    # removeNote(idNote:ID!):\n\n"}}
  `,{Query:{hola:()=>"Hi",...Z,...X},Mutation:{...L,...V,...J}})},39491:e=>{"use strict";e.exports=require("assert")},14300:e=>{"use strict";e.exports=require("buffer")},6113:e=>{"use strict";e.exports=require("crypto")},9523:e=>{"use strict";e.exports=require("dns")},82361:e=>{"use strict";e.exports=require("events")},57147:e=>{"use strict";e.exports=require("fs")},13685:e=>{"use strict";e.exports=require("http")},95687:e=>{"use strict";e.exports=require("https")},41808:e=>{"use strict";e.exports=require("net")},22037:e=>{"use strict";e.exports=require("os")},71017:e=>{"use strict";e.exports=require("path")},85477:e=>{"use strict";e.exports=require("punycode")},63477:e=>{"use strict";e.exports=require("querystring")},12781:e=>{"use strict";e.exports=require("stream")},71576:e=>{"use strict";e.exports=require("string_decoder")},24404:e=>{"use strict";e.exports=require("tls")},76224:e=>{"use strict";e.exports=require("tty")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},59796:e=>{"use strict";e.exports=require("zlib")}},a={};function s(e){var t=a[e];if(void 0!==t)return t.exports;var r=a[e]={id:e,loaded:!1,exports:{}};return n[e].call(r.exports,r,r.exports,s),r.loaded=!0,r.exports}s.m=n,s.x=()=>{var e=s.O(void 0,[939],(()=>s(20579)));return s.O(e)},e=[],s.O=(t,r,n,a)=>{if(!r){var o=1/0;for(d=0;d<e.length;d++){for(var[r,n,a]=e[d],i=!0,u=0;u<r.length;u++)(!1&a||o>=a)&&Object.keys(s.O).every((e=>s.O[e](r[u])))?r.splice(u--,1):(i=!1,a<o&&(o=a));if(i){e.splice(d--,1);var c=n();void 0!==c&&(t=c)}}return t}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[r,n,a]},s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.f={},s.e=e=>Promise.all(Object.keys(s.f).reduce(((t,r)=>(s.f[r](e,t),t)),[])),s.u=e=>e+".js",s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),r={826:1},s.O.require=e=>r[e],s.f.require=(e,t)=>{r[e]||(e=>{var t=e.modules,n=e.ids,a=e.runtime;for(var o in t)s.o(t,o)&&(s.m[o]=t[o]);a&&a(s);for(var i=0;i<n.length;i++)r[n[i]]=1;s.O()})(require("./"+s.u(e)))},t=s.x,s.x=()=>(s.e(939),t()),s.x()})();